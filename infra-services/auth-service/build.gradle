group 'tk.scaks.keycloak'
version '0.0.1'

ext {
    set('keycloak_version', '22.0.1')
    set('resteasy_version', '6.2.4.Final')
    set('liquibase_version', '4.16.1')
    set('infinispan_version', '14.0.6.Final')
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    runtimeOnly "com.h2database:h2"
    implementation "org.jboss.resteasy:resteasy-jackson2-provider:${resteasy_version}"
    implementation "org.keycloak:keycloak-dependencies-server-all:${keycloak_version}"
    implementation "org.keycloak:keycloak-crypto-default:${keycloak_version}"
    implementation "org.keycloak:keycloak-admin-ui:${keycloak_version}"
    implementation ("org.keycloak:keycloak-services:${keycloak_version}") {
        exclude group:"io.smallrye", module: "jandex"
    }
    implementation "org.keycloak:keycloak-rest-admin-ui-ext:${keycloak_version}"
    implementation "io.micrometer:micrometer-registry-prometheus:1.10.5"
    implementation "org.liquibase:liquibase-core:${liquibase_version}"
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    implementation "io.smallrye:jandex:3.0.5"
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.named("bootBuildImage") {
    environment["BP_HEALTH_CHECKER_ENABLED"] = "true"
    buildpacks = ["urn:cnb:builder:paketo-buildpacks/java", "gcr.io/paketo-buildpacks/health-checker:latest"]
    imageName = "$registry/auth-service:latest"
    docker {
        host = "tcp://$dockerRemote"
        publish = true
    }
}

test {
    useJUnitPlatform()
}